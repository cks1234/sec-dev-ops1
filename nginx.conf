worker_processes 1;

events {
    worker_connections 1024;
}

http {
    # Redirect HTTP to HTTPS
    server {
        listen 80;
        listen [::]:80;
        server_name $host;  # Replace with your public IP or domain

        # Redirect all HTTP requests to HTTPS
        return 301 https://$host$request_uri;
    }

    # Handle HTTPS requests
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name $host;  # Replace with your public IP or domain

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/certs/localhost.crt;
        ssl_certificate_key /etc/nginx/ssl/private/localhost.key;

        # Proxy for the Angular application
        location / {
            proxy_pass http://angular-app:4200;  # Forward to the Angular frontend
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy for the backend service
        location /api/ {
            proxy_pass http://angular-server:3000;  # Forward API requests to the backend
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS configuration
            add_header 'Access-Control-Allow-Origin' '*'; # Adjust if necessary
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';
            add_header 'Access-Control-Allow-Credentials' 'true';

            # Handle preflight OPTIONS requests
            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' '*'; # Adjust if necessary
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';
                add_header 'Access-Control-Allow-Credentials' 'true';
                return 204;
            }
        }
    }
}
